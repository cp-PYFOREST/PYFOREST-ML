```{r}
library(tidyverse)
library(ggthemr)
library(plotly)
library(flextable)
```

```{r}
# Read the CSV files
sim5 <- read_csv('/Users/romero61/github/PYFOREST-ML/05-outputs/reports/predictions-log-lut-areas/sim-5-log-lut-area-hectares.csv')
sim25 <- read_csv('/Users/romero61/github/PYFOREST-ML/05-outputs/reports/predictions-log-lut-areas/sim-25-log-lut-area-hectares.csv')
sim50 <- read_csv('/Users/romero61/github/PYFOREST-ML/05-outputs/reports/predictions-log-lut-areas/sim-50-log-lut-area-hectares.csv')
simhedges <- read_csv('/Users/romero61/github/PYFOREST-ML/05-outputs/reports/predictions-log-lut-areas/sim-hedges-log-lut-area-hectares.csv')



```



simulation_data <- area_by_department_land_use  |>
  group_by(simulation, land_use_type) |>
  summarize(lut_area = sum(total_area_lu, na.rm = TRUE)) %>%
      arrange(-lut_area) %>%
      mutate(simulation = factor(
        simulation,
        levels = c(
          "25% Forest Reserve",
          "50% Forest Reserve",
           "Hedgerow incl. 25% Forest Reserve",
          "5% Forest Reserve"
        ))) |> mutate(type = "Simulation")


simulation_data$land_use_type <- factor(simulation_data$land_use_type, levels = c("paddocks_area", "hedgerow_area", "riparian_area","fr_area"))


levels(simulation_data$simulation) <- c("Current Forest Law", "Promotes Forest Conservation","Prioritize Economic Development","Law Ambiguity") 

simulation_data



simulation_data |>
  group_by(simulation) |>
  summarize(tot_area = sum(lut_area))


```{r}
# Combine the data frames
prediction_data <- bind_rows(
  sim5 %>% mutate(simulation = "Law Ambiguity"),
  sim25 %>% mutate(simulation = "Current Forest Law"),
  sim50 %>% mutate(simulation = "Promotes Forest Conservation"),
  simhedges %>% mutate(simulation = "Prioritize Economic Development")) 

prediction_data$LandUseType <- factor(prediction_data$LandUseType, levels = c("Paddocks", "Hedgerow", "Riparian Corridor","Forest Reserve"))


levels(prediction_data$simulation) <- c("Current Forest Law", "Promotes Forest Conservation","Prioritize Economic Development","Law Ambiguity") 

prediction_data
```
```{r}
simulation_total_area <-  prediction_data |>
  group_by(simulation, LandUseType) |>
  summarize(total_area = sum(TotalArea))
simulation_total_area
```


```{r}
color_mapping_deforestation <- c(
  "Forest Reserve NonDeforested" = "#4B5F43",  # Hunter Green
  "Hedgerow NonDeforested" = "#AEBD93",  # Sage
  "Riparian Corridor NonDeforested" = "#A7C7D8",  # Columbia blue
  "Paddocks NonDeforested" = "#F6AE2D",  # Orange (Pantone)
  "Forest Reserve Deforested" = "#2F4858",  # Darker Hunter Green
  "Hedgerow Deforested" = "#6E7B5A",  # Darker Sage
  "Riparian Corridor Deforested" = "#33658A",  # Darker Columbia blue
  "Paddocks Deforested" = "#F26419"  # Darker Orange
)
```

```{r}
# Reshape the data
prediction_data_long <- prediction_data %>%
  pivot_longer(cols = c(DeforestedArea, NonDeforestedArea),
               names_to = "DeforestationStatus",
               values_to = "Area") %>%
  mutate(LandUseTypeStatus = interaction(LandUseType, DeforestationStatus, sep = " ")) |>
  select(LandUseType, simulation, Area, LandUseTypeStatus)

# Set the levels of the new factor variable in the desired order
levels(prediction_data_long$LandUseTypeStatus) <- c(
  "Paddocks Deforested", "Hedgerow Deforested", "Riparian Corridor Deforested", "Forest Reserve Deforested",
  "Paddocks NonDeforested", "Hedgerow NonDeforested", "Riparian Corridor NonDeforested", "Forest Reserve NonDeforested"
)

prediction_data_long
```





```{r}
# Create the bar plot
plot1 <- ggplot(prediction_data_long, aes(x = simulation, y = Area, fill = LandUseTypeStatus)) +
  geom_bar(stat = 'identity', position = 'stack', color = "black", linewidth = 0.25) +
  scale_fill_manual(values = color_mapping_deforestation) +
  labs(x = "Simulation", y = "Area", fill = "LandUseTypeStatus") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.background = element_rect(fill = "transparent"),
        legend.position = "top") +
  coord_flip()  # Flip the coordinates

plot1
```



```{r}
color_mapping <- c(
  "Forest Reserve" = "#4B5F43",  # Hunter Green
  "Hedgerow" = "#AEBD93",  # Sage
  "Riparian Corridor" = "#A7C7D8",  # Columbia blue
  "Paddocks" = "#F26419"  # Hunyadi yellow
)
  
```





```{r}
simulation_total_area
```


```{r}
# Create the bar plot
plot2 <- ggplot(simulation_total_area, aes(x = simulation, y = total_area, fill = LandUseType)) +
  geom_bar(stat = 'identity',  color = "black", linewidth = 0.25) +
  labs(x = "Simulation", y = "Total Area", fill = "LandUseType") +
  scale_fill_manual(values = color_mapping) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.background = element_rect(fill = "transparent"),
        legend.position = "top",
        ) +
  coord_flip()  # Flip the coordinates

plot2




#ggsave('~/github/Land-Use-Plan-Simulation/img/simulations.png', bg = 'transparent', width = 16, height = 9)

```

```{r}
simulation_total_area$type <- "Simulation"
prediction_data_long$type <- "Prediction"
# Assign LandUseTypeStatus in simulation_total_area
simulation_total_area$LandUseTypeStatus <- ifelse(simulation_total_area$LandUseType == "Paddocks", 
                                                  "Paddocks Deforested", 
                                                  paste(simulation_total_area$LandUseType, "NonDeforested"))
simulation_total_area$Area <- simulation_total_area$total_area
combined_data <- bind_rows(simulation_total_area, prediction_data_long)

combined_data$simulation_type <- paste(combined_data$simulation, combined_data$type)





```
```{r}
# Create the plot
ggplot(combined_data, aes(x = simulation_type, y = Area, fill = LandUseTypeStatus)) +
  geom_bar(stat = 'identity', position = 'stack', color = "black", linewidth = 0.25) +
  scale_fill_manual(values = color_mapping_deforestation) +
  labs(x = "Type", y = "Area", fill = "LandUseTypeStatus") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.background = element_rect(fill = "transparent"),
        legend.position = "top") +
  coord_flip()  # Flip the coordinates


```
```{r}

# Reorder the factor levels
combined_data$LandUseTypeStatus <- factor(combined_data$LandUseTypeStatus, levels = c(
  "Paddocks Deforested", "Hedgerow Deforested", "Riparian Corridor Deforested", "Forest Reserve Deforested",
  "Paddocks NonDeforested", "Hedgerow NonDeforested", "Riparian Corridor NonDeforested", "Forest Reserve NonDeforested"
))


# Create the plot
ggplot(combined_data, aes(x = simulation_type, y = Area, fill = LandUseTypeStatus)) +
  geom_bar(stat = 'identity', position = 'stack', color = "black", linewidth = 0.25) +
  scale_fill_manual(values = color_mapping_deforestation) +
  labs(x = "Type", y = "Area", fill = "LandUseTypeStatus") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        plot.background = element_rect(fill = "transparent"),
        legend.position = "top") +
  coord_flip()  # Flip the coordinates

```

